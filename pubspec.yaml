name: loyalty
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.24+12

environment:
  sdk: ">=2.7.0 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  shared_preferences: ^2.0.15
  firebase_messaging: 10.0.0
  # firebase_core: ^1.0.3
  firebase_crashlytics: ^2.0.0
  flutter_local_notifications: ^9.8.0
  flutter_spinkit: ^5.0.0
  cached_network_image: 3.1.0
  dio: 4.0.1
  image_gallery_saver: ^1.7.0
  intl: ^0.17.0
  photo_view: ^0.13.0
  encrypt: ^5.0.1
  devicelocale: ^0.3.1
  flutter_udid: 2.0.0
  geolocator: ^9.0.2
  geocoder: 0.2.1
  rabbit_converter: ^1.0.0
  permission_handler: ^6.1.0
  url_launcher: ^6.0.4
  pin_code_fields: ^7.1.0
  sms_autofill: ^2.0.1
  google_api_availability: 3.0.1
  aws_s3: 0.1.1+hotfix.5
  camera_camera: ^2.0.2
  flutter_exif_rotation: ^0.4.2
  image_cropper: 1.5.1
  image_picker: ^0.7.5
  carousel_slider: 4.0.0
  gzx_dropdown_menu: ^3.1.0
  qr_flutter: ^4.0.0
  store_redirect: ^2.0.1
  pull_to_refresh: ^2.0.0
  flutter_dash: ^0.0.1
  qr_code_scanner: ^1.0.1
  # flutter_inappwebview: ^5.4.4+3
  flutter_inappwebview: ^5.7.2+3
  badges: ^2.0.1
  flutter_slidable: ^0.6.0
  flutter_staggered_grid_view: ^0.4.0
  flutter_statusbarcolor_ns: ^0.5.0
  firebase_core_platform_interface: 4.5.1
  heic_to_jpg: 0.2.0
  flutter_native_image: ^0.0.6+1
  # minio: ^3.5.0
  aws_s3_upload: ^1.4.0
  loading_animation_widget: ^1.2.0+4
  flutter_launcher_icons: ^0.11.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

flutter_icons:
  image_path: 'assets/images/applogo.png'
  android: true
  ios: true

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
   - assets/images/
   - assets/claim/
   - assets/js/
   - assets/json/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Ubuntu
      fonts:
        - asset: fonts/Ubuntu.ttf
    - family: Zawgyi
      fonts:
        - asset: fonts/Zawgyi2009.ttf
    - family: Pyidaungsu
      fonts:
        - asset: fonts/Pyidaungsu.ttf 
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
